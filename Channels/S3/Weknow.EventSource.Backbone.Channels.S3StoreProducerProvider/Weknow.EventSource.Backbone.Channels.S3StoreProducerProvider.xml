<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Weknow.EventSource.Backbone.Channels.S3StoreProducerProvider</name>
    </assembly>
    <members>
        <member name="T:Weknow.EventSource.Backbone.Channels.S3ProducerStorageStrategy">
            <summary>
            Responsible to save information to S3 storage.
            The information can be either Segmentation or Interception.
            When adding it via the builder it can be arrange in a chain in order of having
            'Chain of Responsibility' for saving different parts into different storage (For example GDPR's PII).
            Alternative, chain can serve as a cache layer.
            </summary>
        </member>
        <member name="M:Weknow.EventSource.Backbone.Channels.S3ProducerStorageStrategy.#ctor(Weknow.EventSource.Backbone.Channels.IS3Repository)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="s3Repository">S3 repository.
            Use S3Factory in order to create it (will create one if missing).
            S3Factory will read credentials from the following environment variables: "S3_ACCESS_KEY", "S3_SECRET", "S3_REGION".</param>
        </member>
        <member name="M:Weknow.EventSource.Backbone.Channels.S3ProducerStorageStrategy.#ctor(Microsoft.Extensions.Logging.ILogger,System.String,System.String,Weknow.EventSource.Backbone.Channels.IS3RepositoryFactory)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="logger">The logger.</param>
            <param name="bucket">The bucket.</param>
            <param name="basePath">The base path.</param>
            <param name="factory">The repository's factory.</param>
        </member>
        <member name="M:Weknow.EventSource.Backbone.Channels.S3ProducerStorageStrategy.Weknow#EventSource#Backbone#IProducerStorageStrategy#SaveBucketAsync(System.String,Weknow.EventSource.Backbone.Bucket,Weknow.EventSource.Backbone.EventBucketCategories,Weknow.EventSource.Backbone.Metadata,System.Threading.CancellationToken)">
            <summary>
            Saves the bucket information.
            </summary>
            <param name="id">The identifier.</param>
            <param name="bucket">Either Segments or Interceptions.</param>
            <param name="type">The type.</param>
            <param name="meta">The meta.</param>
            <param name="cancellation">The cancellation.</param>
            <returns>
            Array of metadata entries which can be used by the consumer side storage strategy, in order to fetch the data.
            </returns>
        </member>
    </members>
</doc>
